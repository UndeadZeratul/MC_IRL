# Configuration file

general {
    # List of strings that won't show up in the mod listing [default: []]
    S:blackList <
        .*Forge Mod Loader.*
        .*Minecraft Coder Pack.*
        .*Minecraft Forge.*
        .*Minecraft Multipart Plugin.*
        .*Extended Mod Config.*
        .*Extended Renderer.*
        .*In-Game wiki Mod.*
        .*libsandstone.*
        .*Aroma1997Core\|Helper.*
        .*CTMLib.*
        .*CoroPets.*
        .*CoroAI.*
        .*CoFH ASM.*
        .*debug.*
        .*Dynamic Lights .*
        .*examplemod.*
        .*MFR Compat.*
        .*Build Mod.*
        .*FastCraft.*
        .*JourneyMap.*
        .*Lycanites .* Mobs.*
        .*MapWriter.*
        .*MobiusCore.*
        .*NinsModLister.*
        .*Opis.*
        .*ServerTools .*
        .*VersionChecker.*
     >

    # Use this to create custom categories for modIDs or names. For example, if you would like Nin's Mod Lister to show up in a Things category, your config would look like this Things:NinsModLister [default: [Things:NinsModLister]]
    S:categoryGroups <
        Current API Versions:AppleCore
        Current API Versions:Baubles
        Current API Versions:LunatriusCore
        Current API Versions:MCMultiPart
        Optional Client Mod Versions:Baubles-Hud
        Optional Client Mod Versions:Better Foliage
        Optional Client Mod Versions:Durability Show
        Optional Client Mod Versions:Inventory Tweaks
        Optional Client Mod Versions:Mod Name Tooltip
        Optional Client Mod Versions:Neat
     >

    #  [default: [Current Mod Versions]]
    S:categoryPriority <
        Current API Versions
        Current Mod Versions
        Optional Client Mod Versions
     >

    # Name of your mod list file [default: Versions.md]
    S:fileName=Versions.md

    # Category name for any mods that don't fit a defined custom category [default: Current Mod Versions]
    S:generalCategoryTitle=Current Mod Versions

    # Use this to override values in a mod's mcmod.info. Syntax is ModID:OverrideField:Value where ModID is the ID of the mod you are overriding, OverrideField is the name of the mcmod.info field you are trying to override, and Value is the value you want to display instead [default: []]
    S:overrides <
        
     >

    # Displays the Forge version at the top of the version list [default: true]
    B:showForgeVersion=true
}


